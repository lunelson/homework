//
// functions
//

@function font($f: $curr-font) {
  @return map-get($fonts, $f) or nth(nth($fonts, 1), 2);
}


@function font-var($key, $f: $curr-font) {
  @return map-get(font($f), $key) or error("key '#{$key}' not found in $font '#{$f or base}'");
}


@function font-align($f: $curr-font) {
  @return (map-get(font($f), trim-top) - map-get(font($f), trim-bottom))/2*1em;
}

//
// NEW FUNCTIONS
//

@function trim-top-abs($line: $curr-line, $font: $curr-font) {
  @return (strip($line) - 1) * 0.5em + font-var('trim-top', $font) * 1em;
}

@function trim-bottom-abs($line: $curr-line, $font: $curr-font) {
  @return (strip($line) - 1) * 0.5em + font-var('trim-bottom', $font) * 1em;
}

@function trim-top-margin($mult: $curr-inner-y, $line: $curr-line, $font: $curr-font) {
  @return subtract(inner-y($mult), trim-top-abs($line, $font));
}

@function trim-bottom-margin($mult: $curr-inner-y, $line: $curr-line, $font: $curr-font) {
  @return subtract(inner-y($mult), trim-bottom-abs($line, $font));
}


//
// compensated / adjusted value functions
//


@function f-size($size: $curr-size, $f: $curr-font) {
  @return $size * font-var('size-adjust', $f);
}


@function f-line($line: $curr-line, $f: $curr-font) {
  @return $line / font-var('size-adjust', $f);
}


@function auto-line($size: $curr-size, $f: $curr-font) {
  $size: f-size($size, $f);
  $div: font-var('line-div', $f);
  $min: font-var('line-min', $f);
  $rel: f-line() / strip($size);
  @return ceil($min / $rel * $div) / $div / strip($size);
}
