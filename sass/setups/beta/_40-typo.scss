//
// typo setup
//

.line { line-height: 1; margin-top: 0; margin-bottom: 0; }

h1, h2, h3, h4, h5, h6 { font-weight: bold; }

.sans--meta { color: color(thunder); }

$x-trims: (
  sans: calc(1.3px - (1.3/16)*1em),
  serif: null
);

@each $f, $font in $fonts {

  $first: index(map-keys($fonts), $f) == 1;
  @if $first { body { @include font($f); } }
  #{base-class($f)} {
    @include font($f);
    $is-trim-x: selector-parse('&.trim-x');
    $in-stack: insert-parents(base-class('stack'), '>');
    @at-root #{$is-trim-x}, #{$in-stack} {
      margin-right: map-get($x-trims, $f);
      margin-left: map-get($x-trims, $f);
    }
  }

  @each $s in map-keys(__get($base, 'copy-sizes', $f)) {

    @include mm2-for(copy-sizes $f $s) {

      $size: __get(medium-var('copy-sizes'), $f, $s);
      $px-base: strip(medium-var('font-size'));
      $px-size: nth($size, 1);
      $px-line: nth($size, 2);
      $line-height: $px-line / $px-size;

      #{mod-class($f, $s)} {
        font-size: $px-size / $px-base * 1rem;
        line-height: $line-height;

        $is-trim: selector-parse('&.trim');
        $in-stack: insert-parents(base-class('stack'), '>');

        @at-root #{$is-trim}, #{$in-stack} {
          margin-top: trim-top-margin(0, $line-height, $f);
          margin-bottom: trim-bottom-margin(0, $line-height, $f);
        }
      }
    }
  }
}

// @each $f, $font in $fonts {

//   $first: index(map-keys($fonts), $f) == 1;
//   @if $first { body { @include font($f); } }
//   #{base-class($f)} {
//     @include font($f);
//   }

//   // TODO:
//   // make this mm-for loop more efficient
//   // add compensated font-size / line-height?

//   @include mm-for(copy-sizes) {
//     @each $s, $copy-size in map-get(medium-var('copy-sizes'), $f) {
//       $px-base: strip(medium-var('font-size'));
//       $px-size: nth($copy-size, 1);
//       $px-line: nth($copy-size, 2);
//       $line: $px-line / $px-size;
//       #{mod-class($f, $s)} {
//         font-size: $px-size / $px-base * 1rem;
//         line-height: $line;

//         //
//         // font trim setup WRT stack base-class
//         //

//         $trim: selector-parse('&.trim');
//         @at-root #{$trim}, #{insert-parents(base-class('stack'), '>')} {
//           margin-top: trim-top-margin(0, $line, $f);
//           margin-bottom: trim-bottom-margin(0, $line, $f);
//           @if $f == 'sans' { margin-left: calc(1.3px - (1.3/16)*1em); }
//         }
//       }
//     }
//   }
// }


