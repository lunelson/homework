//  _   _
// | | | |
// | |_| |__   ___ _ __ ___   ___
// | __| '_ \ / _ \ '_ ` _ \ / _ \
// | |_| | | |  __/ | | | | |  __/
//  \__|_| |_|\___|_| |_| |_|\___|

$colors: (
  dark: #111,
  lite: #eee,
) !default;

// srgb gamma correction, per spec: https://en.wikipedia.org/wiki/srgb
@function re-gamma($n) { @if $n <= 0.0031308 { @return $n * 12.92; } @else { @return 1.055 * pow($n, 1/2.4) - 0.055; } }
@function de-gamma($n) { @if $n <= 0.04045 { @return $n / 12.92; } @else { @return pow((($n + 0.055)/1.055), 2.4); } }

// srgb bt-709 luma
@function luma($c) {
  $rlin: de-gamma(red($c)/255);
  $glin: de-gamma(green($c)/255);
  $blin: de-gamma(blue($c)/255);
  @return re-gamma(0.2126 * $rlin + 0.7152 * $glin + 0.0722 * $blin) * 100;
}

// BOOTSTRAP VERSION, DUMB
// @function yiq($color) {
//   $r: red($color);
//   $g: green($color);
//   $b: blue($color);
//   $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;
//   @return map-get($colors, if($yiq >= 128, 'dark', 'lite'));
// }

@function yiq($c) {
  $rlin: de-gamma(red($c)/255);
  $glin: de-gamma(green($c)/255);
  $blin: de-gamma(blue($c)/255);
  // $yiq: re-gamma(0.2126 * $rlin + 0.7152 * $glin + 0.0722 * $blin);
  $yiq: 0.2126 * $rlin + 0.7152 * $glin + 0.0722 * $blin;
  @return map-get($colors, if($yiq >= 0.5, 'dark', 'lite'));
}

@mixin homework-theme-setup($modern: true, $lite: true) {

  $colors: map-merge((
    dark: #111,
    lite: #eee,
  ), $colors) !global;

  :root {
    --fg-color: #{map-get($colors, if($lite, 'dark', 'lite'))};
    --bg-color: #{map-get($colors, if($lite, 'lite', 'dark'))};
    // --bd-color: #{map-get($colors, if($lite, 'dark', 'lite'))};
  }

  body {
    color: var(--fg-color);
    background-color: var(--bg-color);
  }

  @if $modern {

    #{base-class('fg', false)} { color: var(--fg-color); }
    #{base-class('bg', false)} { background-color: var(--bg-color); }
    // #{base-class('bd', false)} { border-color: var(--bd-color); }

    @each $c, $color in $colors {
      :root {
        --color-#{$c}: #{$color};
        --contrast-color-#{$c}: #{yiq($color)};
        --darkened-color-#{$c}: #{mix($color, #000, 90%)};
        --lightened-color-#{$c}: #{mix($color, #fff, 75%)};
      }

      ///
      /// EXPLICIT COLORS
      ///

      .fg-#{$c} {
        --fg-color: var(--color-#{$c});
        --fg-contrast-color: var(--contrast-color-#{$c});
      }
      .fg-contrast-#{$c} {
        --fg-color: var(--contrast-color-#{$c});
      }
      .bg-contrast-#{$c} {
        --bg-color: var(--contrast-color-#{$c});
      }
      .bg-#{$c} {
        --bg-color: var(--color-#{$c});
        --bg-contrast-color: var(--contrast-color-#{$c});
      }
      .theme-#{$c} {
        --theme-color: var(--color-#{$c});
        --theme-contrast-color: var(--contrast-color-#{$c});
        --theme-darkened-color: var(--darkened-color-#{$c});
        --theme-lightened-color: var(--lightened-color-#{$c});
      }
    }

    ///
    /// THEME COLORS
    ///

    .fg-theme {
      --fg-color: var(--theme-color);
      --fg-contrast-color: var(--theme-contrast-color);
    }
    .bg-theme {
      --bg-color: var(--theme-color);
      --bg-contrast-color: var(--theme-contrast-color);
    }
    .fg-contrast-theme {
      --fg-color: var(--theme-contrast-color);
    }
    .bg-contrast-theme {
      --bg-color: var(--theme-contrast-color);
    }

    ///
    /// IMPLICIT COLORS
    ///

    .fg-contrast {
      --fg-color: var(--bg-contrast-color);
    }

    .bg-contrast {
      --bg-color: var(--fg-contrast-color);
    }

  } @else {
    @include homework-legacy-theme-setup;
  }
}
