//   ___ ___  _ __ ___
//  / __/ _ \| '__/ _ \
// | (_| (_) | | |  __/
//  \___\___/|_|  \___|

$root: () !default;
$media: () !default;

$root-orig: ();
$media-orig: ();

$curr-m: null;

$root-defaults: (

  // bases
  font-size: 16px,
  line-height: 1.25,
  inner-x: 1rem,
  inner-y: 1.25rem,
  outer-top: 2rem,
  outer-right: 2rem,
  outer-bottom: 2rem,
  outer-left: 2rem,
  grid-columns: 12,

  // variations
  font-mods: ( sans: ( m: 16px 1.25 ) ),
  inner-mods: ( m: 1rem ),
  // inner-x-mods: ( m: 1rem ),
  // inner-y-mods: ( m: 1rem ),
);

$media-defaults: (
  s: (breakpoint: 30em),
  m: (breakpoint: 45em),
  l: (breakpoint: 67.5em),
);

@mixin homework-core-setup($modern: true, $trim: true) {

  $root-orig: $root !global;
  $media-orig: $media !global;
  $root: --parse-medium(map-merge($root-defaults, $root), 16px) !global;

  //
  // IF MODERN
  //

  @if $modern {
    :root {
      @each $key, $val in $root {
        @if not index('list' 'map', type-of($val)) {
          --#{$key}: #{$val};
        }
      }
      --inner-width: calc(var(--outer-width) - (var(--outer-right) + var(--outer-left)));
      @include --medium-inner-mods($root);
      @include --medium-font-mods($root, $trim);
    }
    html {
      font-size: var(--font-size);
      line-height: var(--line-height);
    }
  }

  $reference-medium: $root;
  @each $m, $medium in $media {
    @if not index(map-keys($medium), 'breakpoint') {
      @include error('homework: one of your $media does not have a breakpoint key');
    }

    $reference-medium: --parse-medium(--deep-merge($reference-medium, $medium));

    //
    // IF MODERN
    //

    @media #{--query-string(map-get($medium, 'breakpoint'))} {
      @if $modern {
        :root {
          @each $key in join(map-keys($medium), ('outer-width')) {
            $val: map-get($reference-medium, $key);
            @if not index('list' 'map', type-of($val)) {
              --#{$key}: #{$val};
            }
          }
          @include --medium-inner-mods($medium);
          @include --medium-font-mods($medium, $trim);
        }
      }
    }

    $media: map-merge($media, ($m: $reference-medium)) !global;
  }

  //
  // IF LEGACY
  //

  @if not $modern {
    @include mm-for('font-size', 'line-height') {
      html {
        font-size: m-var(font-size);
        line-height: m-var(line-height);
      }
    }
  }
}
