//        _                  _
//       | |                (_)
//   __ _| |_ ___  _ __ ___  _  ___
//  / _` | __/ _ \| '_ ` _ \| |/ __|
// | (_| | || (_) | | | | | | | (__
//  \__,_|\__\___/|_| |_| |_|_|\___|

@function ratio-str($ratio)    { @return "#{nth($ratio,1)}-#{nth($ratio,2)}"; }
@function ratio-class($ratio, $index, $list, $root, $bp) { @return '.#{$root}-#{ratio-str($ratio)}#{$bp}'; }
@function ratio-calc($ratio)    { @return calc(100% * (#{nth($ratio,1)} / #{nth($ratio,2)})); }

@function ratio-w-calc($ratio) { @return calc(100% * #{nth($ratio,1)} / #{nth($ratio,2)}); }
@function ratio-w-i-calc($ratio) { @return calc((100% + var(--column-gap)) * #{nth($ratio,1)} / #{nth($ratio,2)} - var(--column-gap)); }
@function ratio-m-i-calc($ratio) { @return calc((100% + var(--column-gap)) * #{nth($ratio,1)} / #{nth($ratio,2)}); }

@mixin homework-atomic-setup($modern: true) {

  $media-grid-columns: ();
  $reduction-ratio-lists: ();

  @each $m, $medium in $media {
    $media-grid-columns: append($media-grid-columns, map-get($medium, 'grid-columns'));
  }

  @for $d from 1 through max($media-grid-columns...) {
    @for $n from 1 through $d {
      $gcd: gcd($n, $d); $reduction: $n/$gcd $d/$gcd;
      $set: append(map-get($reduction-ratio-lists, $reduction) or (), $n $d);
      $reduction-ratio-lists: map-merge($reduction-ratio-lists, ($reduction: $set));
    }
  }

  @if $modern {

    @each $m in join((null), map-keys($media)) {

      @include m($m) {

        $bp: m-suffix();

        @each $y, $mod in map-get($root, 'inner-y-mods') or () {
          .py-#{$y}#{$bp}, .pt-#{$y}#{$bp} { padding-top: var(--inner-y-#{$y}); }
          .py-#{$y}#{$bp}, .pb-#{$y}#{$bp} { padding-bottom: var(--inner-y-#{$y}); }
          .my-#{$y}#{$bp}, .mt-#{$y}#{$bp} { margin-top: var(--inner-y-#{$y}); }
          .my-#{$y}#{$bp}, .mb-#{$y}#{$bp} { margin-bottom: var(--inner-y-#{$y}); }
          .my-neg-#{$y}#{$bp}, .mt-neg-#{$y}#{$bp} { margin-top: calc(-1 * var(--inner-y-#{$y})); }
          .my-neg-#{$y}#{$bp}, .mb-neg-#{$y}#{$bp} { margin-bottom: calc(-1 * var(--inner-y-#{$y})); }
        }
        @each $x, $mod in map-get($root, 'inner-x-mods') or () {
          .px-#{$x}#{$bp}, .pr-#{$x}#{$bp} { padding-right: var(--inner-x-#{$x}); }
          .px-#{$x}#{$bp}, .pl-#{$x}#{$bp} { padding-left: var(--inner-x-#{$x}); }
          .mx-#{$x}#{$bp}, .mr-#{$x}#{$bp} { margin-right: var(--inner-x-#{$x}); }
          .mx-#{$x}#{$bp}, .ml-#{$x}#{$bp} { margin-left: var(--inner-x-#{$x}); }
          .mx-neg-#{$x}#{$bp}, .mr-neg-#{$x}#{$bp} { margin-right: calc(-1 * var(--inner-x-#{$x})); }
          .mx-neg-#{$x}#{$bp}, .ml-neg-#{$x}#{$bp} { margin-left: calc(-1 * var(--inner-x-#{$x})); }
        }

        // dimensions: explicit ratios

        @each $reduction, $ratio-list in $reduction-ratio-lists {
          // explicit percentage ratios
          #{__map($ratio-list, 'ratio-class', 'span', $bp)},
          #{__map($ratio-list, 'ratio-class', 'w', $bp)} { width: ratio-w-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'px', $bp)},
          #{__map($ratio-list, 'ratio-class', 'pr', $bp)} { padding-right: ratio-w-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'px', $bp)},
          #{__map($ratio-list, 'ratio-class', 'pl', $bp)} { padding-left: ratio-w-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'mx', $bp)},
          #{__map($ratio-list, 'ratio-class', 'mr', $bp)} { margin-right: ratio-w-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'mx', $bp)},
          #{__map($ratio-list, 'ratio-class', 'ml', $bp)} { margin-left: ratio-w-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'mx-neg', $bp)},
          #{__map($ratio-list, 'ratio-class', 'mr-neg', $bp)} { margin-right: multiply(#{ratio-w-calc($reduction)}, -1) }
          #{__map($ratio-list, 'ratio-class', 'mx-neg', $bp)},
          #{__map($ratio-list, 'ratio-class', 'ml-neg', $bp)} { margin-left: multiply(#{ratio-w-calc($reduction)}, -1) }

          // explicit span-internal ratio classes
          #{__map($ratio-list, 'ratio-class', 'span-i', $bp)},
          #{__map($ratio-list, 'ratio-class', 'w-i', $bp)} { width: ratio-w-i-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'mx-i', $bp)},
          #{__map($ratio-list, 'ratio-class', 'mr-i', $bp)} { margin-right: ratio-m-i-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'mx-i', $bp)},
          #{__map($ratio-list, 'ratio-class', 'ml-i', $bp)} { margin-left: ratio-m-i-calc($reduction) }
          #{__map($ratio-list, 'ratio-class', 'mx-i-neg', $bp)},
          #{__map($ratio-list, 'ratio-class', 'mr-i-neg', $bp)} { margin-right: multiply(#{ratio-m-i-calc($reduction)}, -1) }
          #{__map($ratio-list, 'ratio-class', 'mx-i-neg', $bp)},
          #{__map($ratio-list, 'ratio-class', 'ml-i-neg', $bp)} { margin-left: multiply(#{ratio-m-i-calc($reduction)}, -1) }
        }

        // dimensions: auto

        .w-auto#{$bp} { width: auto; }
        .h-auto#{$bp} { height: auto; }
        .my-auto#{$bp}, .mt-auto#{$bp} { margin-top: auto; }
        .mx-auto#{$bp}, .mr-auto#{$bp} { margin-right: auto; }
        .my-auto#{$bp}, .mb-auto#{$bp} { margin-bottom: auto; }
        .mx-auto#{$bp}, .ml-auto#{$bp} { margin-left: auto; }

        // dimensions: zero

        .w-0#{$bp} { width: 0; }
        .h-0#{$bp} { height: 0; }
        .my-0#{$bp}, .mt-0#{$bp} { margin-top: 0 !important; }
        .mx-0#{$bp}, .mr-0#{$bp} { margin-right: 0 !important; }
        .my-0#{$bp}, .mb-0#{$bp} { margin-bottom: 0 !important; }
        .mx-0#{$bp}, .ml-0#{$bp} { margin-left: 0 !important; }
        .py-0#{$bp}, .pt-0#{$bp} { padding-top: 0 !important; }
        .px-0#{$bp}, .pr-0#{$bp} { padding-right: 0 !important; }
        .py-0#{$bp}, .pb-0#{$bp} { padding-bottom: 0 !important; }
        .px-0#{$bp}, .pl-0#{$bp} { padding-left: 0 !important; }

        // dimensions: 100%

        .w-100p#{$bp} { width: 0; }
        .h-100p#{$bp} { height: 0; }

        // display

        .d-none#{$bp} { display: none; }
        .d-flex#{$bp} { display: flex; }
        .d-grid#{$bp} { display: grid; }
        .d-block#{$bp} { display: block; }
        .d-iblock#{$bp} { display: inline-block; vertical-align: baseline; }
        .d-inline#{$bp} { display: inline; vertical-align: baseline; }

      }
    }
  } @else {
    // @include homework-legacy-atomic-setup;
  }
}
