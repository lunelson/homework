//  _          _                                 _
// | |        | |                               | |
// | |__   ___| |_ __   ___ _ __ ______ ___  ___| |_ _   _ _ __
// | '_ \ / _ \ | '_ \ / _ \ '__|______/ __|/ _ \ __| | | | '_ \
// | | | |  __/ | |_) |  __/ |         \__ \  __/ |_| |_| | |_) |
// |_| |_|\___|_| .__/ \___|_|         |___/\___|\__|\__,_| .__/
//              | |                                       | |
//              |_|                                       |_|

@mixin homework-setup-helper($modern: $homework-is-modern) {

  //
  // STATIC
  //

  // bold, italic
  .strong, .bold { font-weight: bold; }
  .em, .italic { font-style: italic; }

  // clearfix https://css-tricks.com/snippets/css/clear-fix/
  .clearfix {
    &::after {
      content:"";
      display:table;
      clear:both;
    }
    @supports (display: flow-root) {
      display: flow-root;
      &::after { content: none; }
    }
  }

  .nobr { white-space: nowrap; text-overflow: ellipsis; }

  // disable pointer on scrolling
  .is-scrolling,
  .is-scrolling * {
    pointer-events: none !important;
  }

  // hold for absolutes
  #{base-class('hold')} { position: relative; }

  // stop margin collapse propagation
  .stop, .trap, .trim {
    padding-top: 0.1px;
    padding-bottom: 0.1px;
  }

  // hide overflow
  #{base-class('clip')} {
    overflow: hidden !important;
    position: relative;
    z-index: 0; // make sure container can clip
  }
  .clip-x { overflow-x: hidden; overflow-y: visible }
  .clip-y { overflow-y: hidden; overflow-x: visible }
  .clip-circle { border-radius: 50%; }

  #{base-class('fix')} { position: fixed; }
  #{base-class('abs')} { position: absolute; }
  #{base-class('aspect')} {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    >* { flex: 0 0 auto; width: 100%; }
    &::before {
      content: '';
      display: block;
      width: 0.01px;
      height: 0;
      padding-bottom: calc(1 / var(--aspect, 1) * 100%);
    }
  }

  // show on focus, stolen from github;
  // see also: https://codepen.io/matuzo/pen/RZBNjP?editors=1000
  .show-on-focus {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: 0;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
    &:focus {
      z-index: 20;
      width: auto;
      height: auto;
      clip: auto;
    }
  }

  // $aspects: (
  //   1: 1 2 3 4,
  //   2: 1 3 5,
  //   3: 1 2 4 5,
  //   4: 1 3 5,
  //   5: 3 4 8,
  //   16: 9
  // );

  // $aspect-classes: ();
  // @each $n, $d-list in $aspects {
  //   @each $d in $d-list {
  //     $key: $n/$d;
  //     $val: map-get($aspect-classes, $key) or ();
  //     $val: append($val, '.aspect-#{$n}-#{$d}', 'comma');
  //     $aspect-classes: map-merge($aspect-classes, ($key: $val));
  //   }
  // }

  // @each $aspect, $class in $aspect-classes {
  //   #{$class} { --aspect: #{$aspect}; }
  // }

  //
  // RESPONSIVE
  //


  @each $m in join(null, map-keys($media)) {

    @include m($m) {

      $m__: m-prefix();

      // hide visually-only / img replacement
      // https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
      // https://css-tricks.com/the-image-replacement-museum/
      .#{$m__}vhide {
        position: absolute !important;
        clip: rect(0 0 0 0); // IE6, IE7
        clip: rect(0, 0, 0, 0);
        flex: 0 0 0%;
        padding: 0 !important;
        border: 0 !important;
        height: 1px !important;
        width: 1px !important;
        overflow: hidden;
        body:hover & a,
        body:hover & input,
        body:hover & button { display: none !important; }
      }

      // hide/show, without removing from DOM
      .#{$m__}hide {
        pointer-events: none;
        visibility: hidden;
        opacity: 0;
      }
      .#{$m__}show {
        pointer-events: initial;
        visibility: visible;
        opacity: 1;
      }

      // display
      .#{$m__}d-none { display: none !important; }
      .#{$m__}d-flex {
        display: flex !important;
        // & > * {
        //   flex: 0 0 auto;
        //   max-width: 100%;
        //   min-width: 0%; // https://css-tricks.com/flexbox-truncated-text/
        //   overflow-wrap: break-word;
        // }
      }
      .#{$m__}d-flex-y {
        display: flex !important;
        flex-direction: column;
        // align-items: stretch;
        // & > * {
        //   flex: 0 0 auto; // best for column direction
        //   // min-height: auto;
        //   // height: auto;
        //   max-width: 100%; // fix overflow in IE
        //   overflow-wrap: break-word;
        // }
      }
      .#{$m__}d-grid { display: grid !important; }
      .#{$m__}d-grid-y { display: grid !important; grid-auto-flow: column; }
      .#{$m__}d-block { display: block !important; }
      .#{$m__}d-iblock { display: inline-block !important; vertical-align: baseline; }
      .#{$m__}d-inline { display: inline !important; vertical-align: baseline; }

      // position
      .#{$m__}static { position: static; }
      .#{$m__}rel { position: relative; }
      .#{$m__}fix { position: fixed; }
      .#{$m__}fix-tl { top: 0; left: 0; }
      .#{$m__}fix-tr { top: 0; right: 0; }
      .#{$m__}fix-bl { bottom: 0; left: 0; }
      .#{$m__}fix-br { bottom: 0; right: 0; }
      .#{$m__}fix-trbl { top: 0; right: 0; bottom: 0; left: 0; }
      .#{$m__}abs { position: absolute; }
      .#{$m__}abs-tl { top: 0; left: 0; }
      .#{$m__}abs-tr { top: 0; right: 0; }
      .#{$m__}abs-bl { bottom: 0; left: 0; }
      .#{$m__}abs-br { bottom: 0; right: 0; }
      .#{$m__}abs-trbl { top: 0; right: 0; bottom: 0; left: 0; }
      .#{$m__}abs-cover { top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; }
      .#{$m__}abs-contain { top: 0; left: 0; width: 100%; height: 100%; object-fit: contain; }

      //  align / vertical-align
      .#{$m__}a-left { text-align: left }
      .#{$m__}a-center { text-align: center }
      .#{$m__}a-right { text-align: right }
      .#{$m__}a-top { vertical-align: top }
      .#{$m__}a-middle { vertical-align: middle }
      .#{$m__}a-baseline { vertical-align: baseline }
      .#{$m__}a-bottom { vertical-align: bottom }

      // align-items
      .#{$m__}ai-stretch { align-items: stretch; }
      .#{$m__}ai-center { align-items: center; }
      .#{$m__}ai-baseline { align-items: baseline; }
      .#{$m__}ai-start { align-items: flex-start; }
      .#{$m__}ai-end { align-items: flex-end; }

      // align-self
      .#{$m__}as-stretch { align-self: stretch; }
      .#{$m__}as-center { align-self: center; }
      .#{$m__}as-baseline { align-self: baseline; }
      .#{$m__}as-start { align-self: flex-start; }
      .#{$m__}as-end { align-self: flex-end; }

      // align-content
      .#{$m__}ac-stretch { align-content: stretch; }
      .#{$m__}ac-center { align-content: center; }
      .#{$m__}ac-baseline { align-content: baseline; }
      .#{$m__}ac-start { align-content: flex-start; }
      .#{$m__}ac-end { align-content: flex-end; }
      .#{$m__}ac-between { align-content: space-between; }
      .#{$m__}ac-around { align-content: space-around; }

      // justify-content
      .#{$m__}jc-stretch { justify-content: stretch; }
      .#{$m__}jc-center { justify-content: center; }
      .#{$m__}jc-start { justify-content: flex-start; }
      .#{$m__}jc-end { justify-content: flex-end; }
      .#{$m__}jc-between { justify-content: space-between; }
      .#{$m__}jc-around { justify-content: space-around; }
      .#{$m__}jc-evenly { justify-content: space-evenly; }

      // flex
      .#{$m__}fx-1-0 { flex: 1 0 auto; }
      .#{$m__}fx-0-1 { flex: 0 1 auto; }
      .#{$m__}fx-1-1 { flex: 1 1 auto; }
      .#{$m__}fx-0-0 { flex: 0 0 auto; }

      // fitting

      .#{$m__}fit-none { object-fit: none; }
      .#{$m__}fit-fill { object-fit: fill; }
      .#{$m__}fit-cover { object-fit: cover; }
      .#{$m__}fit-contain { object-fit: contain; }
      .#{$m__}fit-scale-down { object-fit: scale-down; }
    }
  }



}
