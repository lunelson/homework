///
/// SELECTOR
///

@function selector-last($parent-selector: null) {
  $parent-selector: selector-parse($parent-selector or &); $out: ();
  @each $list in $parent-selector {
    $last: nth($list, length($list));
    @if not index($out, $last) and length($last) > 0 {
      $out: append($out, $last, 'comma');
    }
  }
  @return if($out!=(), selector-parse($out), null);
}

@function selector-initial($parent-selector: null) {
  $parent-selector: selector-parse($parent-selector or &); $out: ();
  @each $list in $parent-selector {
    $initial: __slice($list, 1,  length($list) - 1);
    @if not index($out, $initial) and length($initial) > 0 {
      $out: append($out, $initial, 'comma');
    }
  }
  @return if($out!=(), selector-parse($out), null);
}

@function selector-insert($sels, $cmbn: '', $parents: null) {
  $parents: selector-parse($parents or &);
  $out: ();
  $prevs: selector-initial($parents);
  $lasts: selector-last($parents);
  $sels: selector-parse(if(length($sels) == 0, '', $sels));
  @if length(nth($prevs, 1)) > 0 {
    @each $prev in $prevs {
      @each $sel in $sels {
        @each $last in $lasts {
          $out: append($out, #{$prev} #{$sel} #{$cmbn} #{$last}, 'comma');
        }
      }
    }
  } @else {
    @each $sel in $sels {
      @each $last in $lasts {
        $out: append($out, #{$sel} #{$cmbn} #{$last}, 'comma');
      }
    }
  }
  @return selector-parse($out);
}

@function selector-any($anys, $sel: '') {
  @return selector-parse('#{$sel}:-moz-any(#{join((), $anys, comma)}), #{$sel}:-webkit-any(#{join((), $anys, comma)})');
}

@function webkit-any($anys, $sel: '') {
  @return selector-parse('#{$sel}:-webkit-any(#{join((), $anys, comma)})');
}

@function moz-any($anys, $sel: '') {
  @return selector-parse('#{$sel}:-moz-any(#{join((), $anys, comma)})');
}

@function selector-not($sel, $nots) {
  @each $not in $nots { $sel: '#{$sel}:not(#{$not})' }
  @return selector-parse($sel);
}

@function selector-combine($sels1, $sels2, $cmbn: '') {
  $sels1: selector-parse(if(length($sels1) == 0, '', $sels1));
  $sels2: selector-parse(if(length($sels2) == 0, '', $sels2));
  $out: ();
  @each $sel1 in $sels1 {
    @each $sel2 in $sels2 {
      $out: append($out, #{$sel1} #{$cmbn} #{$sel2}, 'comma');
    }
  }
  @return selector-parse($out);
}
