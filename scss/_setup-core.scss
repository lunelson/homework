//                                     _
//                                    | |
//   ___ ___  _ __ ___ ______ ___  ___| |_ _   _ _ __
//  / __/ _ \| '__/ _ \______/ __|/ _ \ __| | | | '_ \
// | (_| (_) | | |  __/      \__ \  __/ |_| |_| | |_) |
//  \___\___/|_|  \___|      |___/\___|\__|\__,_| .__/
//                                              | |
//                                              |_|



@mixin homework-setup-core($modern: $homework-is-modern, $trim: true, $output: true) {

  $root-orig: $root !global;
  $media-orig: $media !global;
  $root: --parse-medium(map-merge($root-defaults, $root), 16px) !global;

  // modern only: custom props output
  @if $modern and $output {
    :root {
      @include --medium-properties($root);
      --inner-width: calc(var(--outer-width) - (var(--outer-right) + var(--outer-left)));
    }
  }

  $outgoing-medium: $root;
  @each $m, $incoming-medium in $media {

    // throw if the medium does not have a breakpoint key
    @if not index(map-keys($incoming-medium), 'breakpoint') {
      @include error('homework: one of your $media does not have a breakpoint key');
    }

    // parse, merge and merge-back
    $outgoing-medium: --parse-medium(--deep-merge($outgoing-medium, $incoming-medium));
    $media: map-merge($media, ($m: $outgoing-medium)) !global;

    // modern only: custom props output
    @if $modern and $output {
      @media #{--query-string(map-get($incoming-medium, 'breakpoint'))} {
        :root {
          @include --medium-properties($incoming-medium);
          --outer-width: #{map-get($outgoing-medium, 'outer-width')};
        }
      }
    }

  }
}
