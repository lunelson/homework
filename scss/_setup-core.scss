//   ___ ___  _ __ ___
//  / __/ _ \| '__/ _ \
// | (_| (_) | | |  __/
//  \___\___/|_|  \___|

// (m), :root -- implicitly responsive

// TODO:
//   1. do all the parsing first in setup-core
//     - when parsing each medium:
//       warn if a breakpoint is not present ✅
//       warn if a key is found that did not exist at $root ✅
//   2. output the rules in setup-root
//     - output base props outside of media queries:
//       --breakpoint-[m] ✅
//       --outer-width-[m] and --inner-width-[m] ✅
//     - output media props using mm exclusive query ✅

@function not-contained($list, $item) {
  @return not index($list, $item);
}

@function any-not-contained($list, $items) {
  @each $item in $items { @if not index($list, $item) { @return true; } }
  @return false;
}

@mixin homework-setup-core() {

  $root-orig: $root !global;
  $media-orig: $media !global;
  $root: --parse-medium(map-merge($root-defaults, $root), 16px) !global;

  $outgoing-medium: $root;
  $reference-medium-keys: append(map-keys($root), 'breakpoint');
  @each $m, $incoming-medium in $media {

    @if not-contained(map-keys($incoming-medium), 'breakpoint') {
      @include throw-error('homework: one of your $media does not have a breakpoint key');
    }

    @if any-not-contained($reference-medium-keys, map-keys($incoming-medium)) {
      @include throw-error('homework: one of your $media contains a key which is not present in $root');
    }

    $outgoing-medium: --parse-medium(--deep-merge($outgoing-medium, $incoming-medium));
    $media: map-merge($media, ($m: $outgoing-medium)) !global;

  }
}
