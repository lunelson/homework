//
// init
//

@mixin t-init() {

  // check our dependency on the setup of sass-m
  @if not $done-m-init { @include throw-error('sass-f: sass-m must be initialized before sass-f'); }

  // if length of fonts is 0, merge fonts-default against it;
  $fonts: if(length($fonts) > 0, $fonts, $fonts-defaults) !global;

  // merge each font against font-default; merge result back to $fonts
  @each $f, $font in $fonts {
    $font: map-merge($font-default, $font);
    $fonts: map-merge($fonts, ($f: $font)) !global;
  }

  $done-t-init: true !global;
}

//
// setup
//

@mixin t-setup() {

  @if not $done-t-init { @include t-init(); }

  @each $f, $font in $fonts {

    $first: index(map-keys($fonts), $f) == 1;
    @if $first { body { font-family: map-get($font, 'family'); } }

    #{base-class($f), if($first, 'body *', '')} {

      // TODO: add compensated size / line-height?
      font-family: map-get($font, 'family');
      // letter spacing
      $spacing-max: font-var('spacing-max', $f);
      $spacing-end: font-var('spacing-end', $f);
      @if $spacing-max > 0 {
        $sel: if(&, selector-parse('&, & *'), '*');
        letter-spacing: calc(#{$spacing-max}px - #{$spacing-max/$spacing-end}em);
      }
    }

    // mod-classes for all media
    // $root-size: strip(medium-var('font-size'));
    // @each $s, $size in map-get(medium-var('copy-sizes'), $f) {
    //   #{mod-class($f, $s, (m, md, med))} {
    //     font-size: nth($size, 1) / $root-size * 1rem;
    //     line-height: nth($size, 2) / nth($size, 1);
    //     @include trim(nth($size, 2) / nth($size, 1), $f);
    //   }
    // }

    // verbose output but WTF
    @include mm-for('copy-sizes' 'inner-y') {
      $root-size: strip(medium-var('font-size'));
      @each $s, $size in map-get(medium(), 'copy-sizes', $f) {
        #{mod-class($f, $s, (m, md, med))} {
          font-size: nth($size, 1) / $root-size * 1rem;
          line-height: nth($size, 2) / nth($size, 1);
          @include trim(nth($size, 2) / nth($size, 1), $f);
        }
      }
    }
    // mod-class overrides for other media where spec'd
    // @each $m, $medium in $media {
    //   $orig-copy-sizes: medium-orig-var('copy-sizes', $m);
    //   @if $orig-copy-sizes {
    //     $f-sizes: map-get($orig-copy-sizes, $f);
    //     @if $f-sizes {
    //       @include medium($m) {
    //         // TODO: check if size or line-height have changed, or both
    //         $root-size: strip(medium-var('font-size'));
    //         @each $s, $size in $f-sizes {
    //           #{mod-class($f, $s, (m, md, med))} {
    //             font-size: nth($size, 1) / $root-size * 1rem;
    //             line-height: nth($size, 2) / nth($size, 1);
    //             @include trim(nth($size, 2) / nth($size, 1), $f);
    //           }
    //         }
    //       }
    //     }
    //   }
    // }
  }

  $done-t-setup: true !global;
}
