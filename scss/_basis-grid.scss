//   __ _                                                  _          _
//  / _| |                                                | |        | |
// | |_| | _____      ________ ___ _ __   __ _ _ __ ______| |__   ___| |_ __   ___ _ __ ___
// |  _| |/ _ \ \ /\ / /______/ __| '_ \ / _` | '_ \______| '_ \ / _ \ | '_ \ / _ \ '__/ __|
// | | | | (_) \ V  V /       \__ \ |_) | (_| | | | |     | | | |  __/ | |_) |  __/ |  \__ \
// |_| |_|\___/ \_/\_/        |___/ .__/ \__,_|_| |_|     |_| |_|\___|_| .__/ \___|_|  |___/
//                                | |                                  | |
//                                |_|                                  |_|


@function cols() {
  @return if($homework-is-modern, var(--col-base), m-var('grid-cols'));
}

@function rows() {
  @return if($homework-is-modern, var(--row-base), m-var('grid-rows') or m-var('grid-cols'));
}

@function row-gap($y: null) {
  @return if($homework-is-modern, var(--row-gap), inner-y($y));
}

@function col-gap($x: null) {
  @return if($homework-is-modern, var(--col-gap), inner-x($x));
}

@function max-columns() {
  @if not (length($media) > 0) { @return m-var('grid-cols'); }
  $column-counts: ();
  @each $m, $medium in $media {
    $column-counts: append($column-counts, map-get($media, $m, 'grid-cols'));
  }
  @return max($column-counts...);
}

@function flow-span($n: cols(), $cols: cols()) {
  @return calc(99.99999% * #{$n} / #{$cols});
}
@function flow-push($n: 1, $cols: cols()) {
  @return calc(99.99999% * #{$n} / #{$cols});
}
@function flow-pull($n: 1, $cols: cols()) {
  @return calc(99.99999% * #{-$n} / #{$cols});
}

@function solo-span($n: cols(), $cols: cols()) {
  @return calc((99.99999% + #{col-gap()}) * #{$n} / #{$cols} - #{col-gap()});
}
@function solo-push($n: 1, $cols: cols()) {
  @return calc((99.99999% + #{col-gap()}) * #{$n} / #{$cols});
}
@function solo-pull($n: 1, $cols: cols()) {
  @return calc((99.99999% + #{col-gap()}) * #{-$n} / #{$cols});
}

@mixin flow-cell($n: null, $l: null, $r: null, $cols: cols()) {
  @if $n and $homework-is-modern { & > * { --col-base: #{$n}; } }
  @if $n { width: flow-span($n, $cols); }
  @if $l { margin-left: flow-span($l, $cols); }
  @if $r { margin-right: flow-span($r, $cols); }
}

@mixin flow-cells($cells) {
  @each $m, $cell in $cells {
    @include m($m) {
      @include flow-cell($cell...);
    }
  }
}

@mixin solo-cell($n: null, $l: null, $r: null, $cols: cols()) {
  @if $n and $homework-is-modern { & > * { --col-base: #{$n}; } }
  @if $n { width: solo-span($n, $cols); }
  @if $l { margin-left: solo-push($l, $cols); }
  @if $r { margin-right: solo-push($r, $cols); }
}

@mixin solo-cells($cells) {
  @each $m, $cell in $cells {
    @include m($m) {
      @include solo-cell($cell...);
    }
  }
}


@function ratio-str($ratio) { @return "#{nth($ratio,1)}-#{nth($ratio,2)}"; }
@function ratio-class($ratio, $index, $list, $root, $__m) { @return '.#{$root}-#{ratio-str($ratio)}#{$__m}'; }

@function ratio-flow-span($ratio) { @return flow-span(#{nth($ratio,1)}, #{nth($ratio,2)}); }
@function ratio-flow-push($ratio) { @return flow-span(#{nth($ratio,1)}, #{nth($ratio,2)}); }
@function ratio-solo-span($ratio) { @return solo-span(#{nth($ratio,1)}, #{nth($ratio,2)}); }
@function ratio-solo-push($ratio) { @return solo-push(#{nth($ratio,1)}, #{nth($ratio,2)}); }
