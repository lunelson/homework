//        _                  _
//       | |                (_)
//   __ _| |_ ___  _ __ ___  _  ___
//  / _` | __/ _ \| '_ ` _ \| |/ __|
// | (_| | || (_) | | | | | | | (__
//  \__,_|\__\___/|_| |_| |_|_|\___|

@mixin homework-setup-atomic($modern: $homework-is-modern) {

  // join with null, to also output suffix-less class
  @each $m in join((null), media-keys()) {

    @include m($m) {

      $__m: m-suffix();

      .w-unset#{$__m} { width: unset; }
      .h-unset#{$__m} { height: unset; }

      // dimensions/margin: auto
      .w-auto#{$__m} { width: auto; }
      .h-auto#{$__m} { height: auto; }
      .my-auto#{$__m}, .mt-auto#{$__m} { margin-top: auto; }
      .mx-auto#{$__m}, .mr-auto#{$__m} { margin-right: auto; }
      .my-auto#{$__m}, .mb-auto#{$__m} { margin-bottom: auto; }
      .mx-auto#{$__m}, .ml-auto#{$__m} { margin-left: auto; }

      // dimensions/margin/padding: zero
      .w-0#{$__m} { width: 0; }
      .h-0#{$__m} { height: 0; }
      .my-0#{$__m}, .mt-0#{$__m} { margin-top: 0 !important; }
      .mx-0#{$__m}, .mr-0#{$__m} { margin-right: 0 !important; }
      .my-0#{$__m}, .mb-0#{$__m} { margin-bottom: 0 !important; }
      .mx-0#{$__m}, .ml-0#{$__m} { margin-left: 0 !important; }
      .py-0#{$__m}, .pt-0#{$__m} { padding-top: 0 !important; }
      .px-0#{$__m}, .pr-0#{$__m} { padding-right: 0 !important; }
      .py-0#{$__m}, .pb-0#{$__m} { padding-bottom: 0 !important; }
      .px-0#{$__m}, .pl-0#{$__m} { padding-left: 0 !important; }

      // dimensions: 100%
      .w-100#{$__m} { width: 100%; }
      .h-100#{$__m} { height: 100%; }

    }
  }

  // get lists of inner-y/-x-mod keys
  $inner-y-keys: map-keys(inner-y-mods());
  $inner-x-keys: map-keys(inner-x-mods());


  /////////////////////////////////////////////
  /////////////////// modern //////////////////
  /////////////////////////////////////////////

  @if $modern {

    // join with null, to also output suffix-less class
    @each $m in join((null), media-keys()) {

      @include m($m) {

        $__m: m-suffix();

        // margin/padding: inner-y
        @each $y in $inner-y-keys {
          .my-#{$y}#{$__m}, .mt-#{$y}#{$__m} { margin-top: var(--inner-y-#{$y}); }
          .my-#{$y}#{$__m}, .mb-#{$y}#{$__m} { margin-bottom: var(--inner-y-#{$y}); }
          .my-neg-#{$y}#{$__m}, .mt-neg-#{$y}#{$__m} { margin-top: calc(-1 * var(--inner-y-#{$y})); }
          .my-neg-#{$y}#{$__m}, .mb-neg-#{$y}#{$__m} { margin-bottom: calc(-1 * var(--inner-y-#{$y})); }
          .py-#{$y}#{$__m}, .pt-#{$y}#{$__m} { padding-top: var(--inner-y-#{$y}); }
          .py-#{$y}#{$__m}, .pb-#{$y}#{$__m} { padding-bottom: var(--inner-y-#{$y}); }
        }

        // margin/padding: inner-x
        @each $x in $inner-x-keys {
          .mx-#{$x}#{$__m}, .mr-#{$x}#{$__m} { margin-right: var(--inner-x-#{$x}); }
          .mx-#{$x}#{$__m}, .ml-#{$x}#{$__m} { margin-left: var(--inner-x-#{$x}); }
          .mx-neg-#{$x}#{$__m}, .mr-neg-#{$x}#{$__m} { margin-right: calc(-1 * var(--inner-x-#{$x})); }
          .mx-neg-#{$x}#{$__m}, .ml-neg-#{$x}#{$__m} { margin-left: calc(-1 * var(--inner-x-#{$x})); }
          .px-#{$x}#{$__m}, .pr-#{$x}#{$__m} { padding-right: var(--inner-x-#{$x}); }
          .px-#{$x}#{$__m}, .pl-#{$x}#{$__m} { padding-left: var(--inner-x-#{$x}); }
        }
      }
    }
  }


  /////////////////////////////////////////////
  /////////////////// legacy //////////////////
  /////////////////////////////////////////////

  @else {

    // list to collect suffix keys
    $m-list: ();

    // join with null, to also output suffix-less class
    @each $m in join(null, media-keys()) {

      // add suffix key to list, start MQ
      $m-list: append($m-list, $m);
      @include m($m) {

        @each $y in $inner-y-keys {
          $inner-y: inner-y($y);

          // margin/padding: inner-y [class list; grows with each loop]
          #{m-suffixize('.my-#{$y}, .mt-#{$y}', $m-list...)} { margin-top: $inner-y; }
          #{m-suffixize('.my-#{$y}, .mb-#{$y}', $m-list...)} { margin-bottom: $inner-y; }
          #{m-suffixize('.my-neg-#{$y}, .mt-neg-#{$y}', $m-list...)} { margin-top: -1 * $inner-y; }
          #{m-suffixize('.my-neg-#{$y}, .mb-neg-#{$y}', $m-list...)} { margin-bottom: -1 * $inner-y; }
          #{m-suffixize('.py-#{$y}, .pt-#{$y}', $m-list...)} { padding-top: $inner-y; }
          #{m-suffixize('.py-#{$y}, .pb-#{$y}', $m-list...)} { padding-bottom: $inner-y; }
        }

        @each $x in $inner-x-keys {
          $inner-x: inner-x($x);

          // margin/padding: inner-x [class list; grows with each loop]
          #{m-suffixize('.mx-#{$x}, .mr-#{$x}', $m-list...)} { margin-right: $inner-x; }
          #{m-suffixize('.mx-#{$x}, .ml-#{$x}', $m-list...)} { margin-left: $inner-x; }
          #{m-suffixize('.mx-neg-#{$x}, .mr-neg-#{$x}', $m-list...)} { margin-right: -1 * $inner-x; }
          #{m-suffixize('.mx-neg-#{$x}, .ml-neg-#{$x}', $m-list...)} { margin-left: -1 * $inner-x; }
          #{m-suffixize('.px-#{$x}, .pr-#{$x}', $m-list...)} { padding-right: $inner-x; }
          #{m-suffixize('.px-#{$x}, .pl-#{$x}', $m-list...)} { padding-left: $inner-x; }
        }
      }

    }
  }

}
