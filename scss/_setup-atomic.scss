//        _                  _
//       | |                (_)
//   __ _| |_ ___  _ __ ___  _  ___
//  / _` | __/ _ \| '_ ` _ \| |/ __|
// | (_| | || (_) | | | | | | | (__
//  \__,_|\__\___/|_| |_| |_|_|\___|

@mixin homework-setup-atomic($modern: $homework-is-modern) {

  // get lists of inner-y/-x-mod keys on $root
  $inner-y-keys: map-keys(inner-y-mods());
  $inner-x-keys: map-keys(inner-x-mods());

  // X AND Y CO-CLASSES FOR STACK, CHAIN, FLOW, GRID

  .y-0 { --row-gap: 0; }
  .x-0 { --col-gap: 0; }

  // not convinced this is necessary yet
  // #{base-class('y', false)} { --row-gap: var(--gap-y); }
  // #{base-class('x', false)} { --col-gap: var(--gap-x); }

  @each $y in $inner-y-keys {
    .y-#{$y} > *,
    #{selector-combine(base-class('y', false), '.shim-#{$y}', '>')} {
      --row-gap: var(--inner-y-#{$y});
    }
  }

  @each $x in $inner-x-keys {
    .x-#{$x} > *,
    #{selector-combine(base-class('x', false), '.shim-#{$x}', '>')} {
      --col-gap: var(--inner-x-#{$x});
    }
  }

  // join with null, to also output suffix-less class
  @each $m in join((null), media-keys()) {

    @include m($m) {

      $m__: m-prefix();

      #{m-base-class('mt', false)}, #{m-base-class('my', false)} { margin-top: var(--mt); }
      #{m-base-class('mr', false)}, #{m-base-class('mx', false)} { margin-right: var(--mr); }
      #{m-base-class('mb', false)}, #{m-base-class('my', false)} { margin-bottom: var(--mb); }
      #{m-base-class('ml', false)}, #{m-base-class('mx', false)} { margin-left: var(--ml); }

      #{m-base-class('pt', false)}, #{m-base-class('py', false)} { padding-top: var(--pt); }
      #{m-base-class('pr', false)}, #{m-base-class('px', false)} { padding-right: var(--pr); }
      #{m-base-class('pb', false)}, #{m-base-class('py', false)} { padding-bottom: var(--pb); }
      #{m-base-class('pl', false)}, #{m-base-class('px', false)} { padding-left: var(--pl); }

      @each $y in $inner-y-keys {
        .#{$m__}my-neg-#{$y}, .#{$m__}mt-neg-#{$y} { --mt: calc(var(--inner-y-#{$y}) * -1); }
        .#{$m__}my-neg-#{$y}, .#{$m__}mb-neg-#{$y} { --mb: calc(var(--inner-y-#{$y}) * -1); }
        .#{$m__}my-#{$y}, .#{$m__}mt-#{$y} { --mt: var(--inner-y-#{$y}); }
        .#{$m__}my-#{$y}, .#{$m__}mb-#{$y} { --mb: var(--inner-y-#{$y}); }
        .#{$m__}py-#{$y}, .#{$m__}pt-#{$y} { --pt: var(--inner-y-#{$y}); }
        .#{$m__}py-#{$y}, .#{$m__}pb-#{$y} { --pb: var(--inner-y-#{$y}); }
      }

      @each $x in $inner-x-keys {
        .#{$m__}mx-neg-#{$x}, .#{$m__}mr-neg-#{$x} { --mr: calc(var(--inner-x-#{$x}) * -1); }
        .#{$m__}mx-neg-#{$x}, .#{$m__}ml-neg-#{$x} { --ml: calc(var(--inner-x-#{$x}) * -1); }
        .#{$m__}mx-#{$x}, .#{$m__}mr-#{$x} { --mr: var(--inner-x-#{$x}); }
        .#{$m__}mx-#{$x}, .#{$m__}ml-#{$x} { --ml: var(--inner-x-#{$x}); }
        .#{$m__}px-#{$x}, .#{$m__}pr-#{$x} { --pr: var(--inner-x-#{$x}); }
        .#{$m__}px-#{$x}, .#{$m__}pl-#{$x} { --pl: var(--inner-x-#{$x}); }
      }

      .#{$m__}my-auto, .#{$m__}mt-auto { --mt: auto; }
      .#{$m__}mx-auto, .#{$m__}mr-auto { --mr: auto; }
      .#{$m__}my-auto, .#{$m__}mb-auto { --mb: auto; }
      .#{$m__}mx-auto, .#{$m__}ml-auto { --ml: auto; }

      .#{$m__}my-0, .#{$m__}mt-0 { --mt: 0; }
      .#{$m__}mx-0, .#{$m__}mr-0 { --mr: 0; }
      .#{$m__}my-0, .#{$m__}mb-0 { --mb: 0; }
      .#{$m__}mx-0, .#{$m__}ml-0 { --ml: 0; }
      .#{$m__}py-0, .#{$m__}pt-0 { --pt: 0; }
      .#{$m__}px-0, .#{$m__}pr-0 { --pr: 0; }
      .#{$m__}py-0, .#{$m__}pb-0 { --pb: 0; }
      .#{$m__}px-0, .#{$m__}pl-0 { --pl: 0; }
    }
  }

}
