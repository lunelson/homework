.flex-stack {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.flex-stack > * {
  flex: 0 0 auto;
}

.stack, [class^="stack-"]:not([class$="stack-"]), [class*=" stack-"]:not([class$="stack-"]), .plain, [class^="plain-"]:not([class$="plain-"]), [class*=" plain-"]:not([class$="plain-"]) {
  padding-top: 0.1px;
  padding-bottom: 0.1px;
}

.stack > *, [class^="stack-"]:not([class$="stack-"]) > *, [class*=" stack-"]:not([class$="stack-"]) > *, .plain > *, [class^="plain-"]:not([class$="plain-"]) > *, [class*=" plain-"]:not([class$="plain-"]) > * {
  margin-top: 0;
  margin-bottom: 0;
}

.stack > * + *, [class^="stack-"]:not([class$="stack-"]) > * + *, [class*=" stack-"]:not([class$="stack-"]) > * + *, .plain > * + *, [class^="plain-"]:not([class$="plain-"]) > * + *, [class*=" plain-"]:not([class$="plain-"]) > * + * {
  margin-top: var(--stack-gap, var(--inner-y));
}

.chain, [class^="chain-"]:not([class$="chain-"]), [class*=" chain-"]:not([class$="chain-"]) {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.chain > *, [class^="chain-"]:not([class$="chain-"]) > *, [class*=" chain-"]:not([class$="chain-"]) > * {
  flex: 0 0 auto;
  margin-right: 0;
  margin-left: 0;
  text-overflow: ellipsis;
}

.chain > * + *, [class^="chain-"]:not([class$="chain-"]) > * + *, [class*=" chain-"]:not([class$="chain-"]) > * + * {
  margin-left: var(--chain-gap, var(--inner-x));
}

.stack-0 > * {
  --stack-gap: 0;
}

.chain-0 > * {
  --chain-gap: 0;
}

.stack-s > *, .plain-s > * {
  --stack-gap: var(--inner-y-s);
}

.stack > .shim-s, [class^="stack-"]:not([class$="stack-"]) > .shim-s, [class*=" stack-"]:not([class$="stack-"]) > .shim-s {
  --stack-gap: var(--inner-y-s);
}

.stack-m > *, .plain-m > * {
  --stack-gap: var(--inner-y-m);
}

.stack > .shim-m, [class^="stack-"]:not([class$="stack-"]) > .shim-m, [class*=" stack-"]:not([class$="stack-"]) > .shim-m {
  --stack-gap: var(--inner-y-m);
}

.stack-l > *, .plain-l > * {
  --stack-gap: var(--inner-y-l);
}

.stack > .shim-l, [class^="stack-"]:not([class$="stack-"]) > .shim-l, [class*=" stack-"]:not([class$="stack-"]) > .shim-l {
  --stack-gap: var(--inner-y-l);
}

.chain-s > * {
  --chain-gap: var(--inner-x-s);
}

.chain > .shim-s, [class^="chain-"]:not([class$="chain-"]) > .shim-s, [class*=" chain-"]:not([class$="chain-"]) > .shim-s {
  --chain-gap: var(--inner-x-s);
}

.chain-form > * {
  --chain-gap: var(--inner-x-form);
}

.chain > .shim-form, [class^="chain-"]:not([class$="chain-"]) > .shim-form, [class*=" chain-"]:not([class$="chain-"]) > .shim-form {
  --chain-gap: var(--inner-x-form);
}
