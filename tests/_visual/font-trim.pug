extends _app

append defs
  - title = 'stack/font'

append head
  style.

    .label::before {
      font-family: monospace;
      counter-reset: cp var(--span-n);
      content: counter(cp);
      display: block;
      width: 100%;
      padding: 1em;
      background-color: #ddd;
    }

    .itest {
      padding: 10px;
      background-color: green;
      color: white;
      font-size: 10px;
    }

    .stack > [class^="f-"], .stack > [class*=" f-"], [class^="stack-"] > [class^="f-"], [class^="stack-"] > [class*=" f-"], [class*=" stack-"] > [class^="f-"], [class*=" stack-"] > [class*=" f-"] {
      --trim-x: calc(1px - 0.1em);
    }

mixin ph2(aspect, color, text)
  .hold(style=`background-color: ${color||'rgba(0,0,0,0.17)'}; padding-bottom: ${100/aspect}%;`)&attributes(attributes)
    .abs-trbl.d-flex.jc-center.ai-center
      if block
        block
      else
        .a-center= text
block body

  .wrap-last
    .frame.frame-y
      .flow-l

        // TRIM VALUE TESTING
        .span-6.stack-s
          .stack(style='background: pink'): .f-sans-xl= _chance.sentence()
          .stack(style='background: pink'): .f-sans-l= _chance.sentence()
          .stack(style='background: pink'): .f-sans-m= _chance.sentence()
          .stack(style='background: pink'): .f-sans-s= _chance.sentence()
          .stack(style='background: pink'): .f-serif-xl= _chance.sentence()
          .stack(style='background: pink'): .f-serif-l= _chance.sentence()
          .stack(style='background: pink'): .f-serif-m= _chance.sentence()
          .stack(style='background: pink'): .f-serif-s= _chance.sentence()
          .stack(style='background: pink'): .f-modern-xl= _chance.sentence()
          .stack(style='background: pink'): .f-modern-l= _chance.sentence()
          .stack(style='background: pink'): .f-modern-m= _chance.sentence()
          .stack(style='background: pink'): .f-modern-s= _chance.sentence()
