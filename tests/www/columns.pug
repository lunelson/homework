extends __layout

append head
  style.
    body, .numbox-group {
      counter-reset: numbox;
    }
    .numbox {
      border: 2px #333 solid;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0.6em;
    }
    .numbox::before {
      /*content: attr(class);*/
    }
    .numbox:empty::before {
      counter-increment: numbox;
      content: counter(numbox);
      display: block;
    }

block body

  .wrap-last
    .frame.frame-y
      .stack-l

        - var testString = 'ABCDEFGHIJabcdefghij'
        .stack-m

          h2.f-sans-m grid with start/end/span combinations
          .grid-s.numbox-group
            .numbox.start-4 .start-4
            .numbox.start-4.span-3 .start-4.span-3
            .numbox.start-4.end-9 .start-4.end-9
            .numbox.end-neg-3 .end-neg-3
            .numbox.end-neg-3.span-7 .end-neg-3.span-7
            .numbox.end-7 .end-7
            .numbox.end-7.span-4 .end-7.span-4
            .numbox.span-4 span-4
            .numbox.span-4 span-4
            .numbox.span-4 span-4
            .numbox.span-4 span-4
          h2.f-sans-m mcol-flow with nested other stuff
          .stop.numbox-group: .flow: .stop.span-8(style='background-color: #f0f0f0'): .mcol-2.mcol-flow-s
            .hold
              .numbox(style=`height: ${_.random(60,300)}px;`)
            .hold
              .numbox(style=`height: ${_.random(60,300)}px;`)
            .hold
              .numbox(style=`height: ${_.random(60,300)}px;`)
            .hold
              .flow
                .span-2
                  .numbox(style=`height: ${_.random(60,300)}px;`)
                .span-2
                  .numbox(style=`height: ${_.random(60,300)}px;`)
            .hold
              .numbox(style=`height: ${_.random(60,300)}px;`)

        .stack-m

          h2.f-sans-m mcol-flow: external neg y margin, internal y padding; no break-inside
          .stop(style='background-color: #f0f0f0'): .mcol-2.m__mcol-3.mcol-flow-s
            .trim: p.f-sans= _casual.text
            .trim: p.f-sans= _casual.text
            .trim: p.f-sans= _casual.text
            .trim: p.f-sans= _casual.text
            .trim: p.f-sans= _casual.text
            .trim: p.f-sans= _casual.text

        .stack-m

          h2.f-sans-m mcol: internal y margin; allow break-inside
          .trim(style='background-color: #f0f0f0'): p.f-sans.mcol-2.m__mcol-3= _chance.paragraph({sentences: 8})
